<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="bitcamp.java77.dao.CosmeticDao">

	<!-- INSERT 영역 -->
	<insert id="insertMember" parameterType="CosmeticMember">
		insert into member(ID, PWD, NAME, EMAIL, GENDER, BIRTH, TEL, reg_date)
		values(#{id}, #{pwd}, #{name}, #{email}, #{gender}, #{birth}, #{tel}, now())
	</insert>
	
 	<insert id="insertReview" useGeneratedKeys="true" parameterType="CosmeticReview" keyProperty="reviewNo">
 		<choose>
 			<when test="status == 0">
 				insert into review(mno,title,cont,vcnt,spart,stat,reg_date)
 				values(#{memberNo},#{title},#{content},0,#{sugeryPart},#{status},now())
 			</when>
 			<otherwise>
 				insert into review(mno,title,cont,vcnt,spart,stat,hos_name,doc_name,sway,sprice,sdate,reg_date)
 				values(#{memberNo},#{title},#{content},0,#{sugeryPart},#{status},#{hospitalName},#{doctorName},#{sugeryWay},#{sugeryPrice},#{sugeryDate},now())
 			</otherwise>
 		</choose>
 		<selectKey keyProperty="reviewNo" order="AFTER" resultType="int">
 			select max(rno) from review
 		</selectKey>
 	</insert>
 	
 	<insert id="insertReviewPhoto" parameterType="CosmeticReviewPhoto">
 		insert into review_phot(rno,fil_path)
 		values(#{reviewNo},#{filePath})
 	</insert>
 	
 	<insert id="insertReviewComment" parameterType="cosmeticReviewComment">
 		insert into comment(rno,mno,cont,reg_date)
 		values(#{reviewNo},#{memberNo},#{content},now())
 		<selectKey keyProperty="commentNo" order="AFTER" resultType="int">
 			select max(cmno) from comment
 		</selectKey>
 	</insert>
 	
 	<insert id="insertWish" parameterType="CosmeticWish">
 		insert into wish(rno,mno,reg_date)
 		values(#{reviewNo},#{memberNo},now())
 	</insert>
 	
 	<insert id="insertReviewRecom" parameterType="CosmeticReviewRecom">
 		insert into review_recom(mno,rno,reg_date)
 		values(#{memberNo},#{reviewNo},now())
 	</insert>
 	
 	<insert id="insertSugeryInfo" parameterType="CosmeticSugeryInfo">
 		insert into surgery_info(wno,hos_name,doc_name,sway,sprice,spart,sdate,reg_date)
 		values(#{wishNo},#{hospitalName},#{doctorName},#{sugeryWay},#{sugeryPrice},#{sugeryPart},#{sugeryDate},now())
 	</insert>
 	
 	<insert id="insertWishEvent" parameterType="CosmeticWishEvent">
 		insert into wish_event(eno, mno, reg_date)
 		select #{eventNo}, #{memberNo}, now() from dual
 		where not exists(select * 
 						   from wish_event 
 						  where eno = #{eventNo} 
 						  	and mno = #{memberNo})
 	</insert>
 	
 	<insert id="insertHospital" parameterType="CosmeticHospital">
 		insert into hospital(name, spart, cont, addr, tel, link, email, reg_date)
 		values(#{name}, #{surgeryPart}, #{content}, #{addr}, #{tel}, #{link}, #{email}, now())
 	</insert>
 	
 	<insert id="insertEvent" parameterType="CosmeticEvent">
 		insert into event(hno, title, hname, p_url, h_url, vcnt, reg_date)
 		values(#{hospitalNo}, #{title}, #{hospitalName}, #{photoURL}, #{pageURL}, 0, now())
 	</insert>
 	  
 	  
 	<!-- SELECT 영역 -->
 	<select id="searchID" parameterType="string" resultType="int">
		select count(*)
		  from member
		 where id = #{id}
	</select>
 	
 	<!-- 병원 정보 resultMap -->
 	<resultMap id="hospitalInfoListMap" type="CosmeticHospital">
 		<result property="hospitalNo" column="HNO" />
 		<result property="name" column="NAME" />
 		<result property="surgeryPart" column="SPART" />
 		<result property="content" column="CONT"/>
 		<result property="addr" column="ADDR" />
 		<result property="tel" column="TEL" />
 		<result property="link" column="LINK" />
 		<result property="regDate" column="REG_DATE" />
 		<result property="email" column="email" />
 	</resultMap>
 	
 	<!-- 병원 정보 select -->
 	<select id="selectHospital" resultMap="hospitalInfoListMap">
 		select HNO, NAME, SPART, CONT, ADDR, TEL, LINK, REG_DATE, email
 		  from HOSPITAL
 		 order by name
 	</select>
 	
 	<select id="selectHospitalInfoDetail" parameterType="int" resultType="CosmeticHospital">
 		select HNO, NAME, SPART as surgeryPart, CONT as content, ADDR, TEL, LINK, email, REG_DATE
 		  from HOSPITAL
 		  where HNO = #{hospitalNo}
 	</select>
 	
 	<select id="selectHospitalInfoByName" parameterType="string" resultMap="hospitalInfoListMap">
 		select HNO, NAME, SPART, CONT, ADDR, TEL, LINK, email, REG_DATE
 		  from HOSPITAL
 		  where name like CONCAT('%',#{name},'%')
 	</select>
 	
 	<select id="selectReviewWish" parameterType="int" resultMap="reviewWishMap">
 		select a.wno as wishNo, a.rno as reviewNo, b.title as title, b.cont as content, b.vcnt as viewCnt, c.fil_path as filePath , b.mno as memberNo, d.id as memberId
		from wish a
		inner join review b
		on a.rno = b.rno
		inner join review_phot c
		on a.rno = c.rno
        inner join member d
        on b.mno = d.mno
		where a.mno = #{memberNo}
		order by b.reg_date desc
 	</select>
 	
 	<resultMap type="CosmeticWish" id="reviewWishMap">
 		<result property="wishNo" column="wishNo" />
 		<result property="reviewNo" column="reviewNo" />
 		<result property="title" column="title" />
 		<result property="content" column="content" />
 		<result property="memberNo" column="memberNo"/>
 		<result property="memberId" column="memberId"/>
 		<result property="viewCnt" column="viewCnt" />
 		<collection property="reviewPhoto" column="filePath" resultMap="reviewPhotoMap" ofType="CosmeticReviewPhoto" javaType="ArrayList"></collection>
 	</resultMap>
 	
 	<!-- Hot Best 리뷰 TOP5 -->
 	<select id="selectReviewBest" resultMap="resultReviewBestMap">
 		select a.rno as reviewNo,b.fil_path as filePath,(select count(*) from review_recom where rno = a.rno) as recomCnt 
		from review a
		inner join review_phot b
		on a.rno = b.rno 
		order by recomCnt desc, reviewNo
		limit 0,10
 	</select>
 	
 	<resultMap type="CosmeticReview" id="resultReviewBestMap">
 		<result property="reviewNo" column="reviewNo"/>
 		<result property="recomCnt" column="recomCnt"/>
 		<collection property="reviewPhoto" column="filePath" resultMap="reviewPhotoMap" ofType="CosmeticReviewPhoto" javaType="ArrayList"></collection>
 	</resultMap>
 	
 	
 	<select id="selectReviewList" parameterType="CosmeticSearch" resultMap="reviewResultMap">
 		select a.rno as reviewNo, mno as memberNo, a.hno as hospitalNo, a.title as title, a.cont as content, a.vcnt as viewCnt,(select count(*) from review_recom where rno = a.rno) as recomCnt, a.spart as sugeryPart, a.stat as status,b.fil_path as filePath, a.reg_date as regDate
		from review a inner join review_phot b
		on a.rno = b.rno
		<choose>
			<when test="wordType=='viewCount'">
				order by a.vcnt desc
			</when>
			<when test="wordType=='recomCount'">
				order by recomCnt desc
			</when>
			<otherwise>	
				order by a.reg_date desc
			</otherwise>
		</choose>
		limit #{start},8
 	</select>
 	
 	<resultMap id="reviewResultMap" type="CosmeticReview">
 		<result property="reviewNo" column="reviewNo" />
 		<result property="memberNo" column="memberNo" />
 		<result property="hospitalNo" column="hospitalNo" />
 		<result property="title" column="title"/>
 		<result property="content" column="content" />
 		<result property="viewCnt" column="viewCnt" />
 		<result property="recomCnt" column="recomCnt" />
 		<result property="sugeryPart" column="sugeryPart" />
 		<result property="status" column="status" />
 		<result property="regDate" column="regDate" />
 		<collection property="reviewPhoto" column="filePath"  resultMap="reviewPhotoMap" ofType="cosmeticReviewPhoto" javaType="ArrayList"></collection>
 	</resultMap>
 	
 	<resultMap id="reviewPhotoMap" type="CosmeticReviewPhoto">
 		<result property="filePath" column="filePath" />
 	</resultMap>
 	
 	<select id="selectEventList" parameterType="CosmeticSearch" resultType="CosmeticEvent">
 		select eno as eventNo, hno as hospitalNo, title, vcnt as viewCnt, reg_date as regDate, p_url as photoURL, hname as hospitalName, h_url as pageURL
		  from event 
		 limit #{start}, 6
 	</select>
 	
 	<select id="selectReviewListDetail" parameterType="int" resultType="CosmeticReview">
 		select RNO as reviewNo, MNO as memberNo, HNO as hospitalNo,title as title,CONT as content, VCNT as viewCnt, (select count(*) from review_recom where rno = #{revieweNo}) as recomCnt , SPART as sugeryPart, STAT as status,hos_name as hospitalName,doc_name as doctorName,sway as sugeryWay, sprice as sugeryPrice, sdate as sugeryDate, REG_DATE as regDate 
 		from review where rno = #{reviewNo}
 	</select>
 	
 	<!-- 페이징하기 위한 searchVO로 조회 -->
 	<select id="selectReviewComment" parameterType="CosmeticSearch" resultMap="reviewCommentMap">
 		select a.CMNO as commentNo, b.id as id, a.RNO as reviewNo,a.MNO as memberNo, a.CONT as content,a.REG_DATE as regDate
		from comment a
		inner join member b
		on a.mno = b.mno
		where rno = #{reviewNo}
		order by a.reg_date desc
		limit #{start},5
 	</select>
 	
 	<!-- 리뷰번호로 댓글조회 -->
 	<select id="selectReviewCommentByReviewNo" parameterType="CosmeticSearch" resultMap="reviewCommentMap">
 		select a.CMNO as commentNo, b.id as id, a.RNO as reviewNo,a.MNO as memberNo, a.CONT as content,a.REG_DATE as regDate
		from comment a
		inner join member b
		on a.mno = b.mno
		where rno = #{reviewNo}
		order by a.reg_date desc
		limit #{start},5
 	</select>
 	
 	<resultMap id="reviewCommentMap" type="CosmeticReviewComment">
 		<result property="commentNo" column="commentNo" />
 		<result property="reviewNo" column="reviewNo" />
 		<result property="memberNo" column="memberNo"/>
 		<result property="content" column="content" />
 		<result property="regDate" column="regDate"/>
 		<collection property="member" column="id" resultMap="memberMap" ofType="CosmeticMember" javaType="ArrayList"></collection>
 	</resultMap>
 	
 	<resultMap id="memberMap" type="CosmeticMember">
 		<result property="id" column="id" />
 	</resultMap>
 	
 	<select id="selectReviewPhoto" parameterType="int" resultType="CosmeticReviewPhoto">
		select RPNO as photoNo, RNO as reviewNo, FIL_PATH as filePath 
		from review_phot where rno = #{reviewNo}
 	</select>
 	
 	<select id="selectLogin" parameterType="CosmeticMember" resultType="int">
 		select count(*)
 		from member
 		where id = #{id}
 		and pwd = #{pwd}
 	</select>
 	
 	<select id="selectMember" parameterType="cosmeticMember" resultType="CosmeticMember">
 		select mno as memberNo,id,pwd,name,email,gender,birth,posno,addr_def as addrDef, addr_det as addrDet, tel, cPart, rec_email as recEmail, cont as content, reg_date as regDate
 		from member
		where id = #{id}
		and pwd = #{pwd}
 	</select>
 	
 	<select id="selectReviewMatch" parameterType="cosmeticReview" resultType="int">
 		select count(*)
 		from review
 		where rno = #{reviewNo}
 		and mno = #{memberNo}
 	</select>
 	
 	<select id="selectReviewPhotoNo" parameterType="int" resultType="cosmeticReviewPhoto">
 		select rpno as photoNo
 		from review_phot
 		where rno = #{reviewNo}
 	</select>
 	
 	<select id="selectReviewCommentCount" parameterType="int" resultType="int">
 		select count(*)
 		from comment
 		where rno = #{reviewNo}
 	</select>
 	
 	<select id="selectWishCheck" parameterType="CosmeticWish" resultType="int">
 		select count(*)
 		from wish
 		where rno = #{reviewNo}
 		and mno = #{memberNo}
 	</select>
 	
 	<select id="selectReviewRecomCheck" parameterType="CosmeticReviewRecom" resultType="int">
 		select count(*)
 		from review_recom
 		where rno = #{reviewNo}
 		and mno = #{memberNo}
 	</select>
 	
 	<select id="selectInfoCheck" parameterType="int" resultType="int">
 		select stat
 		from review
 		where rno = #{reviewNo}
 	</select>
 	
 	<select id="selectReviewSugeryInfo" parameterType="int" resultType="CosmeticSugeryInfo">
 		select hos_name as hospitalName, doc_name as doctorName,spart as sugeryPart, sway as sugeryWay, sprice as sugeryPrice, sdate as sugeryDate
		from review
		where rno = #{reviewNo}
 	</select>
 	
 	
	<!-- 수술정보 보기 -->
 	<select id="selectSurgeryInfo" parameterType="int" resultType="cosmeticReview">
 		select sway as sugeryWay, hos_name as hospitalName, doc_name as doctorName, sprice as sugeryPrice, sdate as sugeryDate, stat as status
 		  from review
 		 where rno = #{reviewNo} 
 	</select>
 	
 	<select id="selectEventViewCnt" parameterType="int" resultType="int">
 		select vcnt as viewCnt
 		  from event
 		 where eno = #{eventNo} 
 	</select>
 	
 	<select id="selectWishEvent" parameterType="CosmeticWishEvent" resultType="int">
 		select count(wno)
 		  from wish_event
 		 where eno = #{eventNo}
 		   and mno = #{memberNo} 
 	</select>
 	
 	
 	<!-- DELETE 영역 -->
 	<delete id="deleteReviewPhoto" parameterType="int">
 		delete from review_phot
 		where rno = #{reviewNo}
 	</delete>
 	
 	<delete id="deleteReview" parameterType="cosmeticReview">
 		delete from review
 		where rno = #{reviewNo}
 		and mno = #{memberNo}
 	</delete>
 	
 	<delete id="deleteReviewCommentByReviewNo" parameterType="int">
 		delete from comment
 		where rno = #{reviewNo}
 	</delete>
 	
 	<delete id="deleteReviewCommentByNo" parameterType="cosmeticReviewComment">
 		delete from comment
 		where cmno = #{commentNo}
 		and mno = #{memberNo}
 	</delete>
 	
 	<delete id="deleteSugeryInfo" parameterType="CosmeticWish">
 		delete from surgery_info
 		where wno = #{wishNo}
 	</delete>
 	
 	<delete id="deleteWish" parameterType="CosmeticWish">
 		delete from wish
 		where wno = #{wishNo}
 		and mno = #{memberNo}
 	</delete>
 	
 	<!-- UPDATE 영역 -->
 	<update id="updateReview" parameterType="cosmeticReview">
 	<choose>
 		<when test="status == 0">
	 		update review
	 		set title = #{title}
	 		,cont = #{content}
	 		,spart = #{sugeryPart}
	 		,stat = #{status}
	 		where rno=#{reviewNo}
	 		and mno=#{memberNo}
 		</when>
 		<otherwise>
			update review
	 		set title = #{title}
	 		,cont = #{content}
	 		,spart = #{sugeryPart}
	 		,stat = #{status}
	 		,hos_name = #{hospitalName}
	 		,doc_name = #{doctorName}
	 		,sway = #{sugeryWay}
	 		,sprice = #{sugeryPrice}
	 		,sdate = #{sugeryDate}
	 		where rno=#{reviewNo}
	 		and mno=#{memberNo}
 		</otherwise>
 	</choose>
 	</update>
 	
 	<update id="updateReviewPhoto" parameterType="cosmeticReviewPhoto">
 		update review_phot
 		set fil_path = #{filePath}
 		where rno = #{reviewNo}
 		and rpno = #{photoNo}
 	</update>
 	
 	<update id="updateReviewViewCnt" parameterType="int">
 		update review
 		set vcnt = vcnt + 1
 		where rno = #{reviewNo}
 	</update>
 	
 	<update id="updateEventViewCnt" parameterType="int">
 		update event
		   set vcnt = vcnt + 1
		where eno = #{eventNo}
 	</update>
 	
</mapper>